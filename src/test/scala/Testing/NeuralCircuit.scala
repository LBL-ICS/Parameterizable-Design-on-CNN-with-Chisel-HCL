package Testing

import IEEEConversions.FPConvert.{convert_long_to_float, convert_string_to_IEEE_754}
import NeuralNetworkEngine.NeuralNetwork.CNNEngine
import NeuralNetworkSWModel.SWModel.compute
import Testing.ConvolutionCircuit.bw
import chisel3.{fromIntToLiteral, getVerilogString}
import chisel3.tester.{testableClock, testableData}
import chiseltest.RawTester.test
import chisel3._
import chisel3.tester._

import java.io.PrintWriter

object NeuralCircuit  {
  def main(args: Array[String]):Unit= {
    val bw = 32

    test(new CNNEngine(10,10,3,3,bw)){c =>
  /*    val inA = Seq(0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0,
        12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0,
        30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0,
        48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0,
        66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0,
        84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0)
      println("\n ----------HW Results---------\n")
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(0).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(1).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(2).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(10).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(11).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(12).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(20).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(21).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(22).toString, bw).asUInt)

      c.clock.step(1)

      c.io.DemuxSel0.poke(0.U)
      c.io.DemuxEn0(0).poke(1.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(1).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(2).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(3).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(11).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(12).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(13).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(21).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(22).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(23).toString, bw).asUInt)

      c.clock.step(1)

      c.io.DemuxSel.poke(0.U)
      c.io.DemuxEn(0).poke(1.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(2).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(3).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(4).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(12).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(13).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(14).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(22).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(23).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(24).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxSel.poke(1.U)
      c.io.DemuxEn(0).poke(0.U)
      c.io.DemuxEn(1).poke(1.U)     //--------------1st Output must be generated
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(3).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(4).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(5).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(13).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(14).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(15).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(23).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(24).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(25).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxSel.poke(2.U)
      c.io.DemuxEn(1).poke(0.U)
      c.io.DemuxEn(2).poke(1.U)     //--------------
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(4).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(5).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(6).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(14).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(15).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(16).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(24).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(25).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(26).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxSel.poke(3.U)
      c.io.DemuxEn(2).poke(0.U)
      c.io.DemuxEn(3).poke(1.U)     //--------------
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(5).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(6).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(7).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(15).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(16).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(17).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(25).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(26).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(27).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxSel.poke(4.U)
      c.io.DemuxEn(3).poke(0.U)
      c.io.DemuxEn(4).poke(1.U)     //--------------
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(6).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(7).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(8).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(16).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(17).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(18).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(26).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(27).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(28).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxSel.poke(5.U)
      c.io.DemuxEn(4).poke(0.U)
      c.io.DemuxEn(5).poke(1.U)     //--------------
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(7).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(8).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(9).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(17).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(18).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(19).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(27).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(28).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(29).toString, bw).asUInt)
//----------------------- 1st Row completed according to inputs---------------------------
      c.clock.step(1)
      c.io.DemuxSel.poke(6.U)
      c.io.DemuxEn(5).poke(0.U)
      c.io.DemuxEn(6).poke(1.U)


//-------------------------------------------------------
      c.clock.step(1)
      c.io.DemuxSel.poke(7.U)
      c.io.DemuxEn(6).poke(0.U)
      c.io.DemuxEn(7).poke(1.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(10).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(11).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(12).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(20).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(21).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(22).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(30).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(31).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(32).toString, bw).asUInt)

//-------------------------------------------------------
      c.clock.step(1)
      c.io.DemuxEn(7).poke(0.U)
      c.io.DemuxEn0(0).poke(0.U)
      c.io.DemuxEn0(1).poke(1.U)
      c.io.DemuxSel0.poke(1.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(11).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(12).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(13).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(21).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(22).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(23).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(31).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(32).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(33).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxSel.poke(0.U)
      c.io.DemuxEn(8).poke(1.U)     //--------------
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(12).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(13).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(14).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(22).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(23).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(24).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(32).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(33).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(34).toString, bw).asUInt)

      c.clock.step(1)

      c.io.DemuxSel.poke(1.U)
      c.io.DemuxEn(8).poke(0.U)
      c.io.DemuxEn(9).poke(1.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(13).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(14).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(15).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(23).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(24).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(25).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(33).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(34).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(35).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxSel.poke(2.U)
      c.io.DemuxEn(9).poke(0.U)
      c.io.DemuxEn(10).poke(1.U)     //--------------
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(14).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(15).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(16).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(24).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(25).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(26).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(34).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(35).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(36).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxSel.poke(3.U)
      c.io.DemuxEn(10).poke(0.U)
      c.io.DemuxEn(11).poke(1.U)     //--------------
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(15).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(16).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(17).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(25).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(26).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(27).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(35).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(36).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(37).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxSel.poke(4.U)
      c.io.DemuxEn(11).poke(0.U)
      c.io.DemuxEn(12).poke(1.U)     //--------------
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(16).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(17).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(18).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(26).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(27).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(28).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(36).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(37).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(38).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxSel.poke(5.U)
      c.io.DemuxEn(12).poke(0.U)
      c.io.DemuxEn(13).poke(1.U)     //--------------
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(17).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(18).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(19).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(27).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(28).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(29).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(37).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(38).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(39).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxSel.poke(6.U)
      c.io.DemuxEn(13).poke(0.U)
      c.io.DemuxEn(14).poke(1.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(20).toString, bw).asUInt)   //Changed
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(21).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(22).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(30).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(31).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(32).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(40).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(41).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(42).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxSel.poke(7.U)
      c.io.DemuxEn(14).poke(0.U)
      c.io.DemuxEn(15).poke(1.U)     //--------------
      c.io.DemuxSel0.poke(2.U)
      c.io.DemuxEn0(1).poke(0.U)
      c.io.DemuxEn0(2).poke(1.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(21).toString, bw).asUInt)     // changed
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(22).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(23).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(31).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(32).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(33).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(41).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(42).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(43).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(15).poke(0.U)
      c.io.DemuxSel.poke(0.U)
      c.io.DemuxEn(16).poke(1.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(22).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(23).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(24).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(32).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(33).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(34).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(42).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(43).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(44).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(17).poke(1.U)
      c.io.DemuxSel.poke(1.U)
      c.io.DemuxEn(16).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(23).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(24).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(25).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(33).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(34).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(35).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(43).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(44).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(45).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(18).poke(1.U)
      c.io.DemuxSel.poke(2.U)
      c.io.DemuxEn(17).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(24).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(25).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(26).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(34).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(35).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(36).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(44).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(45).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(46).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(19).poke(1.U)
      c.io.DemuxSel.poke(3.U)
      c.io.DemuxEn(18).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(25).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(26).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(27).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(35).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(36).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(37).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(45).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(46).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(47).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(20).poke(1.U)
      c.io.DemuxSel.poke(4.U)
      c.io.DemuxEn(19).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(26).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(27).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(28).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(36).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(37).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(38).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(46).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(47).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(48).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(21).poke(1.U)
      c.io.DemuxSel.poke(5.U)
      c.io.DemuxEn(20).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(27).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(28).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(29).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(37).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(38).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(39).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(47).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(48).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(49).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(22).poke(1.U)
      c.io.DemuxSel.poke(6.U)
      c.io.DemuxEn(21).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(30).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(31).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(32).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(40).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(41).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(42).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(50).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(51).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(52).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(23).poke(1.U)
      c.io.DemuxSel.poke(7.U)
      c.io.DemuxEn(22).poke(0.U)
      c.io.DemuxSel0.poke(3.U)
      c.io.DemuxEn0(2).poke(0.U)
      c.io.DemuxEn0(3).poke(1.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(31).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(32).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(33).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(41).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(42).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(43).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(51).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(52).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(53).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(24).poke(1.U)
      c.io.DemuxSel.poke(0.U)
      c.io.DemuxEn(23).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(32).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(33).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(34).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(42).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(43).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(44).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(52).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(53).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(54).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(25).poke(1.U)
      c.io.DemuxSel.poke(1.U)
      c.io.DemuxEn(24).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(33).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(34).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(35).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(43).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(44).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(45).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(53).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(54).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(55).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(26).poke(1.U)
      c.io.DemuxSel.poke(2.U)
      c.io.DemuxEn(25).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(34).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(35).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(36).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(44).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(45).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(46).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(54).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(55).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(56).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(27).poke(1.U)
      c.io.DemuxSel.poke(3.U)
      c.io.DemuxEn(26).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(35).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(36).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(37).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(45).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(46).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(47).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(55).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(56).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(57).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(28).poke(1.U)
      c.io.DemuxSel.poke(4.U)
      c.io.DemuxEn(27).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(36).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(37).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(38).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(46).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(47).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(48).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(56).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(57).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(58).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(29).poke(1.U)
      c.io.DemuxSel.poke(5.U)
      c.io.DemuxEn(28).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(37).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(38).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(39).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(47).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(48).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(49).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(57).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(58).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(59).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(30).poke(1.U)
      c.io.DemuxSel.poke(6.U)
      c.io.DemuxEn(29).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(40).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(41).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(42).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(50).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(51).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(52).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(60).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(61).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(62).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(31).poke(1.U)
      c.io.DemuxSel.poke(7.U)
      c.io.DemuxEn(30).poke(0.U)

      c.io.DemuxSel0.poke(4.U)
      c.io.DemuxEn0(3).poke(0.U)
      c.io.DemuxEn0(4).poke(1.U)

      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(41).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(42).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(43).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(51).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(52).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(53).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(61).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(62).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(63).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(32).poke(1.U)
      c.io.DemuxSel.poke(0.U)
      c.io.DemuxEn(31).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(42).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(43).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(44).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(52).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(53).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(54).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(62).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(63).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(64).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(33).poke(1.U)
      c.io.DemuxSel.poke(1.U)
      c.io.DemuxEn(32).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(43).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(44).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(45).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(53).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(54).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(55).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(63).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(64).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(65).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(34).poke(1.U)
      c.io.DemuxSel.poke(2.U)
      c.io.DemuxEn(33).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(44).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(45).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(46).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(54).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(55).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(56).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(64).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(65).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(66).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(35).poke(1.U)
      c.io.DemuxSel.poke(3.U)
      c.io.DemuxEn(34).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(45).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(46).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(47).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(55).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(56).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(57).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(65).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(66).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(67).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(36).poke(1.U)
      c.io.DemuxSel.poke(4.U)
      c.io.DemuxEn(35).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(46).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(47).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(48).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(56).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(57).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(58).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(66).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(67).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(68).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(37).poke(1.U)
      c.io.DemuxSel.poke(5.U)
      c.io.DemuxEn(36).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(47).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(48).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(49).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(57).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(58).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(59).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(67).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(68).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(69).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(38).poke(1.U)
      c.io.DemuxSel.poke(6.U)
      c.io.DemuxEn(37).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(50).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(51).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(52).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(60).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(61).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(62).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(70).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(71).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(72).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(39).poke(1.U)
      c.io.DemuxSel.poke(7.U)
      c.io.DemuxEn(38).poke(0.U)

      c.io.DemuxSel0.poke(5.U)
      c.io.DemuxEn0(4).poke(0.U)
      c.io.DemuxEn0(5).poke(1.U)

      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(51).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(52).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(53).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(61).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(62).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(63).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(71).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(72).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(73).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(40).poke(1.U)
      c.io.DemuxSel.poke(0.U)
      c.io.DemuxEn(39).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(52).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(53).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(54).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(62).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(63).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(64).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(72).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(73).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(74).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(41).poke(1.U)
      c.io.DemuxSel.poke(1.U)
      c.io.DemuxEn(40).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(53).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(54).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(55).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(63).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(64).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(65).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(73).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(74).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(75).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(42).poke(1.U)
      c.io.DemuxSel.poke(2.U)
      c.io.DemuxEn(41).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(54).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(55).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(56).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(64).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(65).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(66).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(74).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(75).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(76).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(43).poke(1.U)
      c.io.DemuxSel.poke(3.U)
      c.io.DemuxEn(42).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(55).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(56).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(57).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(65).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(66).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(67).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(75).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(76).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(77).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(44).poke(1.U)
      c.io.DemuxSel.poke(4.U)
      c.io.DemuxEn(43).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(56).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(57).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(58).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(66).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(67).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(68).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(76).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(77).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(78).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(45).poke(1.U)
      c.io.DemuxSel.poke(5.U)
      c.io.DemuxEn(44).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(57).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(58).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(59).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(67).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(68).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(69).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(77).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(78).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(79).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(46).poke(1.U)
      c.io.DemuxSel.poke(6.U)
      c.io.DemuxEn(45).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(60).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(61).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(62).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(70).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(71).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(72).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(80).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(81).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(82).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(47).poke(1.U)
      c.io.DemuxSel.poke(7.U)
      c.io.DemuxEn(46).poke(0.U)

      c.io.DemuxSel0.poke(6.U)
      c.io.DemuxEn0(5).poke(0.U)
      c.io.DemuxEn0(6).poke(1.U)

      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(61).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(62).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(63).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(71).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(72).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(73).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(81).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(82).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(83).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(48).poke(1.U)
      c.io.DemuxSel.poke(0.U)
      c.io.DemuxEn(47).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(62).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(63).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(64).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(72).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(73).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(74).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(82).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(83).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(84).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(49).poke(1.U)
      c.io.DemuxSel.poke(1.U)
      c.io.DemuxEn(48).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(63).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(64).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(65).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(73).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(74).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(75).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(83).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(84).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(85).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(50).poke(1.U)
      c.io.DemuxSel.poke(2.U)
      c.io.DemuxEn(49).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(64).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(65).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(66).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(74).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(75).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(76).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(84).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(85).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(86).toString, bw).asUInt)


      c.clock.step(1)
      c.io.DemuxEn(51).poke(1.U)
      c.io.DemuxSel.poke(3.U)
      c.io.DemuxEn(50).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(65).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(66).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(67).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(75).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(76).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(77).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(85).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(86).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(87).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(52).poke(1.U)
      c.io.DemuxSel.poke(4.U)
      c.io.DemuxEn(51).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(66).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(67).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(68).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(76).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(77).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(78).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(86).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(87).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(88).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(53).poke(1.U)
      c.io.DemuxSel.poke(5.U)
      c.io.DemuxEn(52).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(67).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(68).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(69).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(77).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(78).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(79).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(87).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(88).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(89).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(54).poke(1.U)
      c.io.DemuxSel.poke(6.U)
      c.io.DemuxEn(53).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(70).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(71).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(72).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(80).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(81).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(82).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(90).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(91).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(92).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(55).poke(1.U)
      c.io.DemuxSel.poke(7.U)
      c.io.DemuxEn(54).poke(0.U)

      c.io.DemuxSel0.poke(7.U)
      c.io.DemuxEn0(6).poke(0.U)
      c.io.DemuxEn0(7).poke(1.U)

      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(71).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(72).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(73).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(81).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(82).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(83).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(91).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(92).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(93).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(56).poke(1.U)
      c.io.DemuxSel.poke(0.U)
      c.io.DemuxEn(55).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(72).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(73).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(74).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(82).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(83).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(84).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(92).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(93).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(94).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(57).poke(1.U)
      c.io.DemuxSel.poke(1.U)
      c.io.DemuxEn(56).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(73).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(74).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(75).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(83).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(84).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(85).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(93).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(94).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(95).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(58).poke(1.U)
      c.io.DemuxSel.poke(2.U)
      c.io.DemuxEn(57).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(74).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(75).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(76).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(84).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(85).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(86).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(94).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(95).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(96).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(59).poke(1.U)
      c.io.DemuxSel.poke(3.U)
      c.io.DemuxEn(58).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(75).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(76).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(77).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(85).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(86).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(87).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(95).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(96).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(97).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(60).poke(1.U)
      c.io.DemuxSel.poke(4.U)
      c.io.DemuxEn(59).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(76).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(77).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(78).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(86).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(87).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(88).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(96).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(97).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(98).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(61).poke(1.U)
      c.io.DemuxSel.poke(5.U)
      c.io.DemuxEn(60).poke(0.U)
      c.io.inputA(0).poke(convert_string_to_IEEE_754(inA(77).toString, bw).asUInt)
      c.io.inputA(1).poke(convert_string_to_IEEE_754(inA(78).toString, bw).asUInt)
      c.io.inputA(2).poke(convert_string_to_IEEE_754(inA(79).toString, bw).asUInt)
      c.io.inputA(3).poke(convert_string_to_IEEE_754(inA(87).toString, bw).asUInt)
      c.io.inputA(4).poke(convert_string_to_IEEE_754(inA(88).toString, bw).asUInt)
      c.io.inputA(5).poke(convert_string_to_IEEE_754(inA(89).toString, bw).asUInt)
      c.io.inputA(6).poke(convert_string_to_IEEE_754(inA(97).toString, bw).asUInt)
      c.io.inputA(7).poke(convert_string_to_IEEE_754(inA(98).toString, bw).asUInt)
      c.io.inputA(8).poke(convert_string_to_IEEE_754(inA(99).toString, bw).asUInt)

      c.clock.step(1)
      c.io.DemuxEn(62).poke(1.U)
      c.io.DemuxSel.poke(6.U)
      c.io.DemuxEn(61).poke(0.U)

      c.clock.step(1)
      c.io.DemuxEn(63).poke(1.U)
      c.io.DemuxSel.poke(7.U)
      c.io.DemuxEn(62).poke(0.U)

      c.io.DemuxSel0.poke(0.U)
      c.io.DemuxEn0(7).poke(0.U)

      c.clock.step(1)
      c.io.DemuxSel.poke(0.U)
      c.io.DemuxEn(63).poke(0.U)

      c.clock.step(1)
      c.io.FCMuxSel.poke(0.U)
      c.io.FCDemuxEn(0).poke(1.U)
      c.clock.step(1)
      c.io.FCDemuxEn(0).poke(0.U)

      c.io.FCMuxSel.poke(1.U)
      c.io.FCDemuxEn(1).poke(1.U)
      c.clock.step(1)
      c.io.FCDemuxEn(1).poke(0.U)

      c.io.FCMuxSel.poke(2.U)
      c.io.FCDemuxEn(2).poke(1.U)
      c.clock.step(1)
      c.io.FCDemuxEn(2).poke(0.U)

      c.io.FCMuxSel.poke(3.U)
      c.io.FCDemuxEn(3).poke(1.U)
      c.clock.step(1)
      c.io.FCDemuxEn(3).poke(0.U)

//    64- convolutional 16- pooling layer
      for(i <- 0 until 64) {
        println(s"Controller ${i}: ${convert_long_to_float(c.io.ConOut(i).peek().litValue, bw)}")
      }
      println(s"Digit: ${c.io.Digit.peek().litValue}") */
    }

//    println("\n -----------SW Results----------\n")
//    compute(10,3)

    println("[{(Generating Verilog)}")
    val pw = new PrintWriter("CNNEngine_32.v")
    pw.println(getVerilogString(new CNNEngine(10, 10,3,3,bw)))
    pw.close()
  }
}
